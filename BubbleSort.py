#冒泡排序
# 设数组的长度为n,冒泡排序的步骤如图11-5所示。
# 1.首先,对n个元素执行“冒泡”,将数组的最大元素交换至正确位置。
# 2.接下来,对剩余n一1个元素执行“冒泡”,将第二大元素交换至正确位置。
# 3.以此类推,经过n-1轮“冒泡”后,前n-1大的元素都被交换至正确位置。
# 4.仅剩的一个元素必定是最小元素,无须排序,因此数组排序完成。
# 5.对于一个有序的数组,冒泡排序的时间复杂度为O(n),因为每次冒泡都会将一个元素交换至正确位置,因此最多需要n-1次冒泡。
# 6.对于一个逆序的数组,冒泡排序的时间复杂度为O(n2),因为每次冒泡都会将一个元素交换至正确位置,因此最多需要n次冒泡。
# 7.对于一个随机的数组,冒泡排序的时间复杂度为O(n2),因为每次冒泡都会将一个元素交换至正确位置,因此最多需要n次冒泡。
# 8.冒泡排序的空间复杂度为O(1),因为只需要一个临时变量来交换元素。

def BubbleSort(nums):
    for i in range(len(nums)):
        for j in range(len(nums) - i - 1):
            if nums[j] > nums[j + 1]:
                nums[j], nums[j + 1] = nums[j + 1], nums[j]
    return nums


if __name__ == '__main__':
    nums = [1, 22, 31, 4, 52, 36, 27, 8, 9, 102]
    print(BubbleSort(nums))
