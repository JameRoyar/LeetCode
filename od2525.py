# 2525: 【模拟】2023C-小明能到达的最大坐标值
# 内存限制：128 MB
# 时间限制：2.000 S
# 评测方式：文本比较
# 命题人：外部导入
# 提交：147
# 解决：104
# 题目描述
# 小明在玩一个游戏，游戏规则如下：在游戏开始前，小明站在坐标轴原点处（坐标值为 0）给定一组指令和一个幸运数，每个指令都是一个整数，小明按照指定的要求前进或者后退指定的步数。
#
# 前进代表朝坐标轴的正方向走，后退代表朝坐标轴的负方向走，幸运数为一个整数，如果某个指令正好和幸运数相等，则小明行进步数加 1 。
#
# 例如： 幸运数为 3 ，指令数组为[2, 3, 0, -5]
#
# 指令为 2 ，表示前进 2 步
#
# 指令为 3 ，正好好和幸运数相等，前进 3+1=4 步
#
# 指令为 0 ，表示原地不动，既不前进，也不后退
#
# 指令为 -5 ，表示后退 5 步。
#
# 请你计算小明在整个游戏过程中，小明所处的最大坐标值。
#
# 输入
# 第一行输入 1 个数字，代表指令的总个数 n(1≤n≤100）
#
# 第二行输入 1 个数字，代表幸运数 m(−100≤m≤100)
#
# 第三行输入 n 个指令，每个指令值的取值范围为： − 100 ≤ 指令值 ≤ 100
#
# 输出
# 输出在整个游戏过程中，小明所处的最大坐标值。异常情况下输出：12345
# 样例输入 复制
# 5
# -5
# -5 1 6 0 -7
# 样例输出 复制
# 1

# input
n = int(input())
m = int(input())
nums = list(map(int, input().split()))

# solution
ans = 0
tmp = 0
luc = 0
if n < 1 or n > 100:
    print(12345)
elif m < -100 or m > 100:
    print(12345)
else:
    for i in range(n):
        if nums[i] < -100 or nums[i] > 100:
            print(12345)
        else:
            luc = 1 if m > 0 else -1
            tmp = (tmp + nums[i]) if nums[i] != m else (tmp + nums[i] + luc)
            ans = max(tmp, ans)
    print(ans)